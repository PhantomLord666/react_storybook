import React from "react";
import PropTypes from "prop-types";
import styled from "styled-components";

// Definimos los estilos con styled-components
const CardWrapper = styled.div`
  display: flex;
  flex-direction: ${(props) => (props.layout === "horizontal" ? "row" : "column")};
  border: 1px solid #ddd;
  border-radius: 0px;
  overflow: hidden;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  transition: transform 0.2s, box-shadow 0.2s;
  background-color: #fff;
  max-width: 100%;
  width: 100%; /* Asegura que ocupe el espacio disponible */
  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 12px rgba(0, 0, 0, 0.15);
  }

  @media (max-width: 767px) {
    flex-direction: column;
  }
`;

const CardImage = styled.img`
  width: ${(props) => (props.layout === "horizontal" ? "40%" : "100%")};
  height: auto;
  object-fit: cover;
  max-height: ${(props) => (props.layout === "horizontal" ? "none" : "250px")};
`;

const CardContent = styled.div`
  padding: 16px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  flex: 1; /* Asegura que el contenido ocupe el espacio restante */
`;

const CardTitle = styled.h3`
  font-size: 1.25rem;
  margin: 0 0 8px 0;
  color: #333;
`;

const CardDescription = styled.p`
  font-size: 1rem;
  color: #555;
  margin: 0;
`;

const CardFooter = styled.div`
  padding: 12px 16px;
  background-color: #f9f9f9;
  border-top: 1px solid #eee;
  text-align: center;
  font-size: 0.875rem;
  color: #777;
  
  ${(props) =>
    props.layout === "horizontal" &&
    `
    border-top: none;
    border-left: 1px solid #eee;
  `}
`;

const Card = ({ image, title, description, footer, layout }) => {
  return (
    <CardWrapper layout={layout}>
      {image && <CardImage src={image} alt={title} layout={layout} />}
      <CardContent>
        <CardTitle>{title}</CardTitle>
        <CardDescription>{description}</CardDescription>
      </CardContent>
      {footer && <CardFooter layout={layout}>{footer}</CardFooter>}
    </CardWrapper>
  );
};

Card.propTypes = {
  image: PropTypes.string,
  title: PropTypes.string.isRequired,
  description: PropTypes.string,
  footer: PropTypes.node,
  layout: PropTypes.oneOf(["vertical", "horizontal"]),
};

Card.defaultProps = {
  description: "",
  footer: null,
  layout: "vertical",
};

export default Card;
